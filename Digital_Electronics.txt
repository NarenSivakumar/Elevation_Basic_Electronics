  This section is to improve the knowledge of basic and most important digital electronic topics.

  1. Number Systems: Decimal, Binary, Hexa-decimal, Octal
    Decimal (Base-10): The standard human counting system (0-9). Example: 15 in decimal means (1 × 10¹ + 5 × 10⁰).
    Binary (Base-2): Used in computers, consisting of 0s and 1s. Example: 15 in binary is 1111 (1 × 2³ + 1 × 2² + 1 × 2¹ + 1 × 2⁰).
    Hexadecimal (Base-16): A compact way of representing binary, using digits 0-9 and letters A-F. Example: 15 in hexadecimal is F and 255 is FF.

    Real-world Example:
    A computer’s RAM addresses use hexadecimal instead of long binary numbers. For example, memory locations are shown as 0x1A3F instead of 0001101000111111. 
    This makes them shorter and easier to read.
    --------------------------------------------------------------------------------------------------
    To remember:
    Binary is used in computer memory and processors.
    Octal and Hexadecimal are used in microcontrollers and programming for compact representations.
    Decimal is used in daily life and human interactions.
    --------------------------------------------------------------------------------------------------


    2. Logic Gates: AND, OR, NOT, NAND, XOR, NOR
    AND gate: Outputs 1 only if both inputs are 1 (e.g., A × B).
    
    OR gate: Outputs 1 if at least one input is 1.
    
    NOT gate: Inverts the input (0 becomes 1, 1 becomes 0).
    
    XOR gate: Outputs 1 if inputs are different (A ⊕ B).
    
    NAND & NOR gates: Complement of AND and OR, respectively.

    Real-world Example:
    AND gate in a security system: A safe requires both a fingerprint scan AND a password to open.
    The circuit allows access only if both inputs (fingerprint = 1, password = 1) are correct.


    3. Boolean Algebra and K-map Simplification
    Explanation:
    Boolean algebra simplifies logical expressions, reducing circuit complexity. Karnaugh Map (K-map) is a visual method to minimize Boolean expressions.

    K- Map: Karnaugh Map
    K- Map can take in two forms;  
    i. SOP - Sum of Product
    ii. POS - Product of Sum

    For mapping, refer the my notes. 

    Real-world Example:
    Traffic Light Controller: The logic for changing signals (Red → Green → Yellow) can be simplified using Boolean algebra, 
    reducing the number of gates and power consumption.

    4. Flip-Flops (SR, JK, D, T)
    Explanation:
    Flip-flops store binary data (1-bit memory). Types include:
    
    SR Flip-Flop: Set (S=1) stores 1, Reset (R=1) clears 0.
    
    D Flip-Flop: Transfers input D to output Q at every clock pulse.
    
    JK Flip-Flop: A refined SR flip-flop, avoids invalid states.
    
    T Flip-Flop: Toggles between 0 and 1 at every clock pulse.
    
    Real-world Example:
    D Flip-Flop in a digital clock: Each second, the clock stores the time and updates the display using D flip-flops.

    5. Registers and Counters
    Explanation:
    **Registers store multiple bits of data (e.g., 8-bit register can store 11001011).
    **Counters count events like clock pulses (e.g., a 4-bit counter counts from 0000 to 1111).
    
    Real-world Example:
    Counters in elevators: The elevator’s control system counts button presses and moves to the correct floor based on a binary counter.

    6. Multiplexers and Demultiplexers
    Explanation:
    Multiplexer (MUX): Selects one input from many and sends it to the output.
    Demultiplexer (DEMUX): Takes one input and routes it to multiple outputs.
    
    Real-world Example:
    MUX in TV broadcasting: Multiple channels are transmitted over a single frequency, and the receiver selects one channel using a multiplexer.

    7. ADC & DAC (Analog to Digital, Digital to Analog Conversion)
    Explanation:
    ADC (Analog-to-Digital Converter): Converts real-world signals (e.g., sound, temperature) into digital form (binary).
    DAC (Digital-to-Analog Converter): Converts digital signals back into analog (e.g., playing music).
    
    Real-world Example:
    ADC in a microphone: When you speak into a microphone, the sound (analog) is converted into a digital signal for recording.
    DAC in speakers: A music file (digital) is converted back to analog so the speaker can produce sound waves.

